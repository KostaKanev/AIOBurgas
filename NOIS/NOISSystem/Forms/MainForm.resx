<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImageStore" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>